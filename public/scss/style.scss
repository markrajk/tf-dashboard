//@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap');
// ==================================
// MIXINS & FUNCTIONS
// ==================================

@mixin custom-respond($value) {
  @media (max-width: $value * 1px) {
    @content;
  }
}

@mixin custom-respond-vertical($value) {
  @media (max-height: $value * 1px) {
    @content;
  }
}

@mixin custom-respond-combined($value01, $value02) {
  @media (max-width: $value01 * 1px), (max-height: $value02 * 1px) {
    @content;
  }
}

@mixin custom-respond-combined-02($value01, $value02) {
  @media (max-width: $value01 * 1px) and (max-height: $value02 * 1px) {
    @content;
  }
}

@mixin respond($breakpoint) {
  @if $breakpoint==desktop-xxsm {
    @media (max-width: 379px) {
      @content;
    }
  }

  @if $breakpoint==desktop-xsm {
    @media (max-width: 575px) {
      @content;
    }
  }

  @if $breakpoint==desktop-sm {
    @media (max-width: 767px) {
      @content;
    }
  }

  @if $breakpoint==desktop-md {
    @media (max-width: 991px) {
      @content;
    }
  }

  @if $breakpoint==desktop-lg {
    @media (max-width: 1199px) {
      @content;
    }
  }

  @if $breakpoint==desktop-xl {
    @media (max-width: 1379px) {
      @content;
    }
  }

  @if $breakpoint==desktop-xxl {
    @media (max-width: 1720px) {
      @content;
    }
  }

  @if $breakpoint==desktop-xxxl {
    @media (max-width: 1900px) {
      @content;
    }
  }
}

@function resize($base, $value) {
  $result: $base * $value;
  @return $result;
}

@function emcalc($base, $value) {
  $result: $base / $value;
  @return $result * 1em;
}
// ==================================
// VARIABLES
// ==================================
:root {
  //COLORS
  --color-primary: #086cf9;
  --color-green: #2f9b44;
  --color-red: #fd000f;
  --color-black: #000;
  --color-dark-gray: #404040;
  --color-light-gray: #a5a5a5;
  --color-border-gray: #eaeaea;
  --color-primary-background: #f6f6f8;
  --color-secondary-background: #f5f7f8;

  //GRADIENTS
  --gradient-primary: linear-gradient(#1d7bff, #0066f8);
  --gradient-info: linear-gradient(#009dff, #0a8eff);
  --gradient-warning: linear-gradient(#ff9d00, #ffb40a);
  --gradient-dark: linear-gradient(#646464, #4a4a4a);

  --header-top-height: 6.4em;
  --header-main-height-big: 8.4em;
  --header-main-height-small: 5.4em;
}

// ==================================
// MIXINS & FUNCTIONS
// ==================================

//XD VARIBALE MIXINS

//Header H1
@mixin header-h1($size: 2.5em) {
  font-weight: 600;
  font-size: $size;
  color: #212121;
  letter-spacing: -0.56px;
}

//Header H2
@mixin header-h2($size: 2.4em) {
  font-weight: 500;
  font-size: $size;
  color: #172b4d;
  letter-spacing: -0.12px;
}

//Header H3
@mixin header-h3($size: 2.25em) {
  font-weight: 600;
  font-size: $size;
  color: #1a1a1a;
  letter-spacing: -0.11px;
}

//Header H4
@mixin header-h4($size: 2em) {
  font-weight: 600;
  font-size: $size;
  color: #172b4d;
  letter-spacing: normal;
}

//Header H5
@mixin header-h5($size: 17.5em) {
  font-weight: 600;
  font-size: $size;
  color: #000;
  letter-spacing: normal;
}

//Header H6
@mixin header-h6($size: 14.25em) {
  font-weight: 600;
  font-size: $size;
  color: #19212f;
  letter-spacing: normal;
}

//Subtitle 01
@mixin subtitle-01($size: 1.3em) {
  font-weight: 400;
  font-size: $size;
  color: #62677b;
  letter-spacing: normal;
}

//Subtitle 02
@mixin subtitle-02($size: 1.225em) {
  font-weight: 400;
  font-size: $size;
  color: #435365;
  letter-spacing: -0.09px;
}

//Body 01
@mixin body-01($size: 1.275em) {
  font-weight: 400;
  font-size: $size;
  color: #1b2733;
  letter-spacing: normal;
}

//Body 02
@mixin body-01($size: 1.2em) {
  font-weight: 400;
  font-size: $size;
  color: #2f373e;
  letter-spacing: normal;
}

//Navigation links
@mixin navigation-links($size: 1.28em) {
  font-weight: 400;
  font-size: $size;
  color: var(--color-dark-gray);
  letter-spacing: normal;
}

//Caption 01
@mixin body-01($size: 1.13em) {
  font-weight: 400;
  font-size: $size;
  color: #434e5a;
  letter-spacing: -0.03px;
}

/////////////////////////////////////

@mixin custom-respond($value) {
  @media (max-width: $value * 1px) {
    @content;
  }
}

@mixin custom-respond-vertical($value) {
  @media (max-height: $value * 1px) {
    @content;
  }
}

@mixin respond($breakpoint) {
  @if $breakpoint==desktop-xxsm {
    @media (max-width: 379px) {
      @content;
    }
  }

  @if $breakpoint==desktop-xsm {
    @media (max-width: 575px) {
      @content;
    }
  }

  @if $breakpoint==desktop-sm {
    @media (max-width: 767px) {
      @content;
    }
  }

  @if $breakpoint==desktop-md {
    @media (max-width: 991px) {
      @content;
    }
  }

  @if $breakpoint==desktop-lg {
    @media (max-width: 1199px) {
      @content;
    }
  }

  @if $breakpoint==desktop-xl {
    @media (max-width: 1379px) {
      @content;
    }
  }

  @if $breakpoint==desktop-xxl {
    @media (max-width: 1720px) {
      @content;
    }
  }

  @if $breakpoint==desktop-xxxl {
    @media (max-width: 1900px) {
      @content;
    }
  }
}

@function resize($base, $value) {
  $result: $base * $value;
  @return $result;
}

@function emcalc($base, $value) {
  $result: $base / $value;
  @return $result * 1em;
}

// Flexbox Mixins
// http://philipwalton.github.io/solved-by-flexbox/
// https://github.com/philipwalton/solved-by-flexbox
//
// Copyright (c) 2013 Brian Franco
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
// This is a set of mixins for those who want to mess around with flexbox
// using the native support of current browsers. For full support table
// check: http://caniuse.com/flexbox
//
// Basically this will use:
//
// * Fallback, old syntax (IE10, mobile webkit browsers - no wrapping)
// * Final standards syntax (FF, Safari, Chrome, IE11, Opera)
//
// This was inspired by:
//
// * http://dev.opera.com/articles/view/advanced-cross-browser-flexbox/
//
// With help from:
//
// * http://w3.org/tr/css3-flexbox/
// * http://the-echoplex.net/flexyboxes/
// * http://msdn.microsoft.com/en-us/library/ie/hh772069(v=vs.85).aspx
// * http://css-tricks.com/using-flexbox/
// * http://dev.opera.com/articles/view/advanced-cross-browser-flexbox/
// * https://developer.mozilla.org/en-us/docs/web/guide/css/flexible_boxes

//----------------------------------------------------------------------

// Flexbox Containers
//
// The 'flex' value causes an element to generate a block-level flex
// container box.
//
// The 'inline-flex' value causes an element to generate a inline-level
// flex container box.
//
// display: flex | inline-flex
//
// http://w3.org/tr/css3-flexbox/#flex-containers
//
// (Placeholder selectors for each type, for those who rather @extend)

@mixin flexbox {
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
}

// %flexbox { @include flexbox; }

//----------------------------------

@mixin inline-flex {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -moz-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
}

// %inline-flex { @include inline-flex; }

//----------------------------------------------------------------------

// Flexbox Direction
//
// The 'flex-direction' property specifies how flex items are placed in
// the flex container, by setting the direction of the flex container's
// main axis. This determines the direction that flex items are laid out in.
//
// Values: row | row-reverse | column | column-reverse
// Default: row
//
// http://w3.org/tr/css3-flexbox/#flex-direction-property

@mixin flex-direction($value: row) {
  @if $value==row-reverse {
    -webkit-box-direction: reverse;
    -webkit-box-orient: horizontal;
  } @else if $value==column {
    -webkit-box-direction: normal;
    -webkit-box-orient: vertical;
  } @else if $value==column-reverse {
    -webkit-box-direction: reverse;
    -webkit-box-orient: vertical;
  } @else {
    -webkit-box-direction: normal;
    -webkit-box-orient: horizontal;
  }

  -webkit-flex-direction: $value;
  -moz-flex-direction: $value;
  -ms-flex-direction: $value;
  flex-direction: $value;
}

// Shorter version:
@mixin flex-dir($args...) {
  @include flex-direction($args...);
}

//----------------------------------------------------------------------

// Flexbox Wrap
//
// The 'flex-wrap' property controls whether the flex container is single-line
// or multi-line, and the direction of the cross-axis, which determines
// the direction new lines are stacked in.
//
// Values: nowrap | wrap | wrap-reverse
// Default: nowrap
//
// http://w3.org/tr/css3-flexbox/#flex-wrap-property

@mixin flex-wrap($value: nowrap) {
  // No Webkit Box fallback.
  -webkit-flex-wrap: $value;
  -moz-flex-wrap: $value;

  @if $value==nowrap {
    -ms-flex-wrap: none;
  } @else {
    -ms-flex-wrap: $value;
  }

  flex-wrap: $value;
}

//----------------------------------------------------------------------

// Flexbox Flow (shorthand)
//
// The 'flex-flow' property is a shorthand for setting the 'flex-direction'
// and 'flex-wrap' properties, which together define the flex container's
// main and cross axes.
//
// Values: <flex-direction> | <flex-wrap>
// Default: row nowrap
//
// http://w3.org/tr/css3-flexbox/#flex-flow-property

@mixin flex-flow(
  $values: (
    row nowrap,
  )
) {
  // No Webkit Box fallback.
  -webkit-flex-flow: $values;
  -moz-flex-flow: $values;
  -ms-flex-flow: $values;
  flex-flow: $values;
}

//----------------------------------------------------------------------

// Flexbox Order
//
// The 'order' property controls the order in which flex items appear within
// their flex container, by assigning them to ordinal groups.
//
// Default: 0
//
// http://w3.org/tr/css3-flexbox/#order-property

@mixin order($int: 0) {
  -webkit-box-ordinal-group: $int + 1;
  -webkit-order: $int;
  -moz-order: $int;
  -ms-flex-order: $int;
  order: $int;
}

//----------------------------------------------------------------------

// Flexbox Grow
//
// The 'flex-grow' property sets the flex grow factor. Negative numbers
// are invalid.
//
// Default: 0
//
// http://w3.org/tr/css3-flexbox/#flex-grow-property

@mixin flex-grow($int: 0) {
  -webkit-box-flex: $int;
  -webkit-flex-grow: $int;
  -moz-flex-grow: $int;
  -ms-flex-positive: $int;
  flex-grow: $int;
}

//----------------------------------------------------------------------

// Flexbox Shrink
//
// The 'flex-shrink' property sets the flex shrink factor. Negative numbers
// are invalid.
//
// Default: 1
//
// http://w3.org/tr/css3-flexbox/#flex-shrink-property

@mixin flex-shrink($int: 1) {
  -webkit-flex-shrink: $int;
  -moz-flex-shrink: $int;
  -ms-flex-negative: $int;
  flex-shrink: $int;
}

//----------------------------------------------------------------------

// Flexbox Basis
//
// The 'flex-basis' property sets the flex basis. Negative lengths are invalid.
//
// Values: Like "width"
// Default: auto
//
// http://www.w3.org/TR/css3-flexbox/#flex-basis-property

@mixin flex-basis($value: auto) {
  -webkit-flex-basis: $value;
  -moz-flex-basis: $value;
  -ms-flex-preferred-size: $value;
  flex-basis: $value;
}

//----------------------------------------------------------------------

// Flexbox "Flex" (shorthand)
//
// The 'flex' property specifies the components of a flexible length: the
// flex grow factor and flex shrink factor, and the flex basis. When an
// element is a flex item, 'flex' is consulted instead of the main size
// property to determine the main size of the element. If an element is
// not a flex item, 'flex' has no effect.
//
// Values: none | <flex-grow> <flex-shrink> || <flex-basis>
// Default: See individual properties (1 1 0).
//
// http://w3.org/tr/css3-flexbox/#flex-property

@mixin flex($fg: 1, $fs: null, $fb: null) {
  // Set a variable to be used by box-flex properties
  $fg-boxflex: $fg;

  // Box-Flex only supports a flex-grow value so let's grab the
  // first item in the list and just return that.
  @if type-of($fg) == "list" {
    $fg-boxflex: nth($fg, 1);
  }

  -webkit-box-flex: $fg-boxflex;
  -webkit-flex: $fg $fs $fb;
  -moz-box-flex: $fg-boxflex;
  -moz-flex: $fg $fs $fb;
  -ms-flex: $fg $fs $fb;
  flex: $fg $fs $fb;
}

//----------------------------------------------------------------------

// Flexbox Justify Content
//
// The 'justify-content' property aligns flex items along the main axis
// of the current line of the flex container. This is done after any flexible
// lengths and any auto margins have been resolved. Typically it helps distribute
// extra free space leftover when either all the flex items on a line are
// inflexible, or are flexible but have reached their maximum size. It also
// exerts some control over the alignment of items when they overflow the line.
//
// Note: 'space-*' values not supported in older syntaxes.
//
// Values: flex-start | flex-end | center | space-between | space-around
// Default: flex-start
//
// http://w3.org/tr/css3-flexbox/#justify-content-property

@mixin justify-content($value: flex-start) {
  @if $value==flex-start {
    -webkit-box-pack: start;
    -ms-flex-pack: start;
  } @else if $value==flex-end {
    -webkit-box-pack: end;
    -ms-flex-pack: end;
  } @else if $value==space-between {
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
  } @else if $value==space-around {
    -ms-flex-pack: distribute;
  } @else {
    -webkit-box-pack: $value;
    -ms-flex-pack: $value;
  }

  -webkit-justify-content: $value;
  -moz-justify-content: $value;
  justify-content: $value;
}

// Shorter version:
@mixin flex-just($args...) {
  @include justify-content($args...);
}

//----------------------------------------------------------------------

// Flexbox Align Items
//
// Flex items can be aligned in the cross axis of the current line of the
// flex container, similar to 'justify-content' but in the perpendicular
// direction. 'align-items' sets the default alignment for all of the flex
// container's items, including anonymous flex items. 'align-self' allows
// this default alignment to be overridden for individual flex items. (For
// anonymous flex items, 'align-self' always matches the value of 'align-items'
// on their associated flex container.)
//
// Values: flex-start | flex-end | center | baseline | stretch
// Default: stretch
//
// http://w3.org/tr/css3-flexbox/#align-items-property

@mixin align-items($value: stretch) {
  @if $value==flex-start {
    -webkit-box-align: start;
    -ms-flex-align: start;
  } @else if $value==flex-end {
    -webkit-box-align: end;
    -ms-flex-align: end;
  } @else {
    -webkit-box-align: $value;
    -ms-flex-align: $value;
  }

  -webkit-align-items: $value;
  -moz-align-items: $value;
  align-items: $value;
}

//----------------------------------

// Flexbox Align Self
//
// Values: auto | flex-start | flex-end | center | baseline | stretch
// Default: auto

@mixin align-self($value: auto) {
  // No Webkit Box Fallback.
  -webkit-align-self: $value;
  -moz-align-self: $value;

  @if $value==flex-start {
    -ms-flex-item-align: start;
  } @else if $value==flex-end {
    -ms-flex-item-align: end;
  } @else {
    -ms-flex-item-align: $value;
  }

  align-self: $value;
}

//----------------------------------------------------------------------

// Flexbox Align Content
//
// The 'align-content' property aligns a flex container's lines within the
// flex container when there is extra space in the cross-axis, similar to
// how 'justify-content' aligns individual items within the main-axis. Note,
// this property has no effect when the flexbox has only a single line.
//
// Values: flex-start | flex-end | center | space-between | space-around | stretch
// Default: stretch
//
// http://w3.org/tr/css3-flexbox/#align-content-property

@mixin align-content($value: stretch) {
  // No Webkit Box Fallback.
  -webkit-align-content: $value;
  -moz-align-content: $value;

  @if $value==flex-start {
    -ms-flex-line-pack: start;
  } @else if $value==flex-end {
    -ms-flex-line-pack: end;
  } @else {
    -ms-flex-line-pack: $value;
  }

  align-content: $value;
}

// Ensure CSS grid works with IE 11 spec.
// https://css-tricks.com/browser-compatibility-css-grid-layouts-simple-sass-mixins/
// sass-lint:disable no-vendor-prefixes, no-duplicate-properties
@mixin grid {
  display: -ms-grid;
  display: grid;
}

// $columns values should be delimited by a space
@mixin grid-template-columns($columns...) {
  -ms-grid-columns: $columns;
  grid-template-columns: $columns;
}

// $rows values should be delimited by a space
@mixin grid-template-rows($rows...) {
  -ms-grid-rows: $rows;
  grid-template-rows: $rows;
}

// Can be used in combination with above grid-template-X mixins.
// These result in the same output:
// @include grid-template-columns(10px grid-repeat(4, 20px) 30px);
// @include grid-template-columns(10px 20px 20px 20px 20px 30px);
@function grid-repeat($repeat, $stuff: 1fr) {
  $list: ();

  @for $i from 1 through $repeat {
    $list: append($list, $stuff, space);
  }

  @return $list;
}

@mixin grid-column($col-start, $col-end) {
  -ms-grid-column: $col-start;
  -ms-grid-column-span: $col-end - $col-start;
  grid-column: #{$col-start} / #{$col-end};
}

@mixin grid-row($row-start, $row-end) {
  -ms-grid-row: $row-start;
  -ms-grid-row-span: $row-end - $row-start;
  grid-row: #{$row-start} / #{$row-end};
}

@mixin grid-align-self($value) {
  -ms-grid-row-align: $value;
  align-self: $value;
}

@mixin grid-justify-self($value) {
  -ms-grid-column-align: $value;
  justify-self: $value;
}

@mixin target-ie {
  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
    @content;
  }

  @supports (-ms-ime-align: auto) {
    @content;
  }
}

@font-face {
  font-family: "dashoard-icons";
  src: url("../fonts/dashoard-icons.eot?7xzlv2");
  src: url("../fonts/dashoard-icons.eot?7xzlv2#iefix")
      format("embedded-opentype"),
    url("../fonts/dashoard-icons.ttf?7xzlv2") format("truetype"),
    url("../fonts/dashoard-icons.woff?7xzlv2") format("woff"),
    url("../fonts/dashoard-icons.svg?7xzlv2#dashoard-icons") format("svg");
  font-weight: normal;
  font-style: normal;
  font-display: block;
}

[class^="icon-"],
[class*=" icon-"] {
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: "dashoard-icons" !important;
  speak: never;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;

  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.icon-eye-open:before {
  content: "\e946";
}
.icon-eye-closed:before {
  content: "\e947";
}
.icon-burger:before {
  content: "\e945";
}
.icon-camera:before {
  content: "\e944";
}
.icon-fullscreen-enter:before {
  content: "\e941";
}
.icon-fullscreen-exit:before {
  content: "\e942";
}
.icon-cog-full:before {
  content: "\e943";
}
.icon-cog:before {
  content: "\e91f";
}
.icon-shield-circle:before {
  content: "\e92f";
}
.icon-bell:before {
  content: "\e940";
}
.icon-search:before {
  content: "\e93f";
}
.icon-question:before {
  content: "\e926";
}
.icon-exit:before {
  content: "\e93e";
}
.icon-git-pull:before {
  content: "\e93d";
}
.icon-question-circle:before {
  content: "\e900";
}
.icon-document:before {
  content: "\e902";
}
.icon-chat:before {
  content: "\e903";
}
.icon-chart-column:before {
  content: "\e939";
}
.icon-company-circle:before {
  content: "\e901";
}
.icon-users-circle:before {
  content: "\e904";
}
.icon-archive:before {
  content: "\e905";
}
.icon-arrow-right:before {
  content: "\e906";
}
.icon-arrow-left:before {
  content: "\e907";
}
.icon-arrow-down:before {
  content: "\e908";
}
.icon-arrow-up:before {
  content: "\e909";
}
.icon-calendar:before {
  content: "\e90a";
}
.icon-chart-area:before {
  content: "\e90b";
}
.icon-chart-bar:before {
  content: "\e90c";
}
.icon-chart-line:before {
  content: "\e90d";
}
.icon-chart-pie:before {
  content: "\e90e";
}
.icon-check-circle:before {
  content: "\e90f";
}
.icon-arrow-circle-up:before {
  content: "\e910";
}
.icon-arrow-circle-down:before {
  content: "\e911";
}
.icon-arrow-circle-right:before {
  content: "\e912";
}
.icon-arrow-circle-left:before {
  content: "\e913";
}
.icon-check-circle-full:before {
  content: "\e914";
}
.icon-exclamation-circle:before {
  content: "\e915";
}
.icon-plus-circle-full:before {
  content: "\e916";
}
.icon-refresh-circle-full:before {
  content: "\e917";
}
.icon-compare:before {
  content: "\e918";
}
.icon-crown:before {
  content: "\e919";
}
.icon-give-feedback:before {
  content: "\e91a";
}
.icon-minus-outlined:before {
  content: "\e91b";
}
.icon-plus-outlined:before {
  content: "\e91c";
}
.icon-cog-outlined:before {
  content: "\e91d";
}
.icon-expand-outlined:before {
  content: "\e91e";
}
.icon-chevron-left-outlined:before {
  content: "\e920";
}
.icon-chevron-up-outlined:before {
  content: "\e921";
}
.icon-chevron-down-outlined:before {
  content: "\e922";
}
.icon-chevron-right-outlined:before {
  content: "\e923";
}
.icon-close-outlined:before {
  content: "\e924";
}
.icon-ellipsis:before {
  content: "\e925";
}
.icon-chevron-left:before {
  content: "\e927";
}
.icon-chevron-right:before {
  content: "\e928";
}
.icon-chevron-up:before {
  content: "\e929";
}
.icon-chevron-down:before {
  content: "\e92a";
}
.icon-check:before {
  content: "\e92b";
}
.icon-close:before {
  content: "\e92c";
}
.icon-bubble:before {
  content: "\e92d";
}
.icon-bin:before {
  content: "\e92e";
}
.icon-caret-left:before {
  content: "\e930";
}
.icon-caret-right:before {
  content: "\e931";
}
.icon-caret-up:before {
  content: "\e932";
}
.icon-caret-down:before {
  content: "\e933";
}
.icon-shield:before {
  content: "\e934";
}
.icon-star:before {
  content: "\e935";
}
.icon-users:before {
  content: "\e936";
}
.icon-thumbs-down:before {
  content: "\e937";
}
.icon-thumbs-up:before {
  content: "\e938";
}
.icon-time:before {
  content: "\e93a";
}
.icon-user:before {
  content: "\e93b";
}
.icon-user-check:before {
  content: "\e93c";
}

button {
  background-color: transparent;
  font-size: inherit;
  font-family: inherit;
  border: 0;
  outline: none;
}

input {
  outline: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  -o-appearance: none;
  appearance: none;
}

textarea {
  font-size: inherit;
  font-family: inherit;
  resize: none;
  outline: none;
}

// ==================================
// GENERAL SETTINGS
// ==================================
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
  transition: none;
}

html {
  font-size: 62.5%;
  height: 100vh;
}

body {
  height: 100%;
  box-sizing: border-box;
  font-family: "Inter", sans-serif !important;
  font-size: 1rem;
}

//   //SAFARI FIX
//   @media not all and (min-resolution: 0.001dpcm) {
//     @supports (-webkit-appearance: none) {
//       .icon-caret-up,
//       .icon-caret-down {
//         font-size: 6px !important;
//       }
//     }
//   }

//MAIN
.main {
  height: 100%;
  width: 100%;
  display: grid;
  grid-template-areas:
    "header"
    "content";
  grid-template-rows: auto 1fr;
  background-color: #f6f6f8;
}

// ==================================
//              HEADER
// ==================================
.header {
  position: relative;
  grid-area: header;
  padding-top: var(--header-top-height);
  position: relative;
  transition: padding-top 0.5s ease-in-out;

  &-buttons {
    position: absolute;
    top: 1.4em;
    right: 2.2em;
    @include flexbox();
    @include align-items(center);
    @include justify-content(flex-start);
    margin-left: auto;
    z-index: 100;
    transition: top 0.3s ease-in-out;
    animation: fade-in-out-2 0.5s ease-in-out;

    & > *:not(:last-of-type) {
      margin-right: 2em;
    }

    &-settings,
    &-help,
    &-notifications {
      & i {
        font-size: 2em;
        color: #5c6f83;
        transition: color 0.5s ease-in-out;
      }
    }

    &-initials {
      @include flexbox();
      @include align-items(center);
      @include justify-content(center);
      width: emcalc(3.5, 1.83);
      height: emcalc(3.5, 1.83);
      font-size: 1.83em;
      font-weight: 700;
      letter-spacing: 0.09px;
      color: #ffffff;
      background-color: #ffce00;
      border-radius: 50%;
    }
  }

  &-top {
    position: absolute;
    top: 0;
    left: 0;
    transform: translate(0, 0);
    width: 100%;
    padding-left: 1.85em;
    padding-right: 2.2em;
    height: 6.4em;
    @include flexbox();
    @include align-items(center);
    @include justify-content(flex-start);
    background-color: #fff;
    transition: transform 0.5s ease-in-out;

    &-logo {
      padding-right: 1.2em;
      border-right: solid 1.5px #e4e8ec;

      &-img {
        width: 4em;
        height: 4em;
      }
    }

    &-input-container {
      position: relative;
      margin-left: 1.5em;
      width: 48.1em;
      height: 4em;

      & input {
        padding-left: emcalc(4, 1.48);
        width: 100%;
        height: 100%;
        font-size: 1.48em;
        font-weight: 400;
        line-height: 1.15;
        background-color: #f0f1f2;
        border: 0;
        border-radius: 5px;

        &::placeholder {
          color: #58626e;
        }
      }

      & i {
        position: absolute;
        top: 50%;
        left: emcalc(1.4, 1.75);
        font-size: 1.75em;
        color: #7c858f;
        transform: translate(0, -50%);
      }
    }
  }

  &-main {
    padding-left: 1.85em;
    padding-right: 2.2em;
    height: 8.4em;
    @include flexbox();
    @include align-items(center);
    @include justify-content(flex-start);
    background-image: linear-gradient(to right, #2a7bfa 1%, #1a68eb 99%);
    transition: height 0.5s ease-in-out, padding-top 0.5s ease-in-out;

    &-info {
      @include flexbox();
      @include align-items(center);
      @include justify-content(flex-start);
      color: #fff;

      &-icon {
        margin-right: 1.95em;

        & i {
          font-size: 2.4em;
        }
      }

      &-title {
        font-size: 2.5em;
        font-weight: 600;
        line-height: 1.2;
        letter-spacing: -0.56px;
        color: #ffffff;
      }
    }
  }

  &-nav {
    padding: 0 4.4em;
    height: 5.4em;
    background-color: #fff;
    border-bottom: 1px solid #e4e8ec;
    z-index: 50;

    &-list {
      height: 100%;
      width: 100%;
      @include flexbox();
      @include align-items(center);
      @include justify-content(flex-start);
      list-style: none;

      &-item {
        @include flexbox();
        @include align-items(center);
        @include justify-content(center);
        height: 100%;
        position: relative;
        cursor: pointer;

        &:not(:last-of-type) {
          margin-right: 3.6em;
        }

        &-text {
          font-size: 12.8px;
          font-weight: normal;
          font-stretch: normal;
          font-style: normal;
          line-height: 1.18;
          letter-spacing: normal;
          text-align: left;
          color: #404040;
          text-align: center;
        }

        //on hover remove shake when changing weight
        &:hover .header-nav-list-item-text {
          font-weight: 500;
        }
        & .header-nav-list-item-text::before {
          display: block;
          content: attr(text);
          font-weight: 500;
          height: 0;
          overflow: hidden;
          visibility: hidden;
        }

        &.active .header-nav-list-item-text {
          font-weight: 600;
          color: #000;
        }
        &.active .header-nav-list-item-text::before {
          display: block;
          content: attr(text);
          font-weight: 600;
          height: 0;
          overflow: hidden;
          visibility: hidden;
        }

        // &.active::after {
        //   content: "";
        //   position: absolute;
        //   bottom: -1.8em;
        //   left: 50%;
        //   transform: translate(-50%, 0);
        //   display: block;
        //   width: 21px;
        //   height: 14px;
        //   background-color: #fff;
        //   -webkit-clip-path: polygon(50% 0%, 0% 100%, 100% 100%);
        //   clip-path: polygon(50% 0%, 0% 100%, 100% 100%);
        // }

        & svg {
          display: none;
          position: absolute;
          bottom: -2.1em;
          left: 50%;
          transform: translate(-50%, 0);
          width: 2.3em;
          height: 1.5em;
          z-index: 0;
        }

        &.active svg {
          display: block;
        }
      }
    }
  }

  &-sub-nav {
    margin: 1.6em 4.4em 0;
    padding: 0 2.5em;
    height: 52px;
    border-radius: 6px;
    border: solid 1px #e4e8ec;
    background-color: #ffffff;
    z-index: 100;

    &-list {
      height: 100%;
      width: 100%;
      @include flexbox();
      @include align-items(center);
      @include justify-content(flex-start);
      list-style: none;

      &-item {
        cursor: pointer;

        &:not(:last-of-type) {
          margin-right: 3.6em;
        }

        &-text {
          font-size: 12.8px;
          font-weight: normal;
          font-stretch: normal;
          font-style: normal;
          line-height: 1.18;
          letter-spacing: normal;
          text-align: left;
          color: #404040;
          text-align: center;
        }

        //on hover remove shake when changing weight
        &:hover .header-sub-nav-list-item-text {
          font-weight: 500;
        }
        & .header-sub-nav-list-item-text::before {
          display: block;
          content: attr(text);
          font-weight: 500;
          height: 0;
          overflow: hidden;
          visibility: hidden;
        }

        &.active .header-sub-nav-list-item-text {
          font-weight: 600;
          color: #000;
        }
        &.active .header-sub-nav-list-item-text::before {
          display: block;
          content: attr(text);
          font-weight: 600;
          height: 0;
          overflow: hidden;
          visibility: hidden;
        }
      }
    }
  }

  &.small {
    padding-top: 0;

    & .header-buttons {
      top: 0.95em;
      animation: fade-in-out 0.5s ease-in-out;

      &-settings,
      &-help,
      &-notifications {
        & i {
          color: #fff;
        }
      }
    }

    & .header-top {
      transform: translate(0, -100%);
    }

    & .header-main {
      height: 5.4em;
    }
  }
}

// ==================================
//            CONTENT
// ==================================

.content-wrapper {
  grid-area: content;
  height: 100%;
  width: 100%;
  overflow-y: auto;
  height: 100%;
  scrollbar-width: none;
  /* Firefox */
  -ms-overflow-style: none;
  /* Internet Explorer 10+ */

  &::-webkit-scrollbar {
    /* WebKit */
    width: 0;
    //height: 0;
  }
}

.content {
  &-card {
    width: 100%;
    border-radius: 15px;
    box-shadow: 0 3px 6px 0 rgba(206, 206, 206, 0.16);
    border: solid 1px #e4e8ec;
    background-color: #ffffff;
  }
}

// ======================================================================================================================================
//                                                            PAGE SPECIFIC
// ======================================================================================================================================
#home {
  & .header {
    &-nav {
      display: none;
    }

    &-sub-nav {
      display: none;
    }
  }
  & .content {
    padding: 3.8em;
    padding-left: 0;
    padding-right: 0;
    margin-left: 2em;
    margin-right: 2em;
    width: 100%;
    max-width: 82.5em;
    margin: 0 auto;

    &-card {
      padding: 3em 3em 3.5em;

      &:not(:last-of-type) {
        margin-bottom: 2em;
      }

      & .content-card-header {
        @include flexbox();
        @include align-items(center);
        @include justify-content(space-between);

        &-title {
          font-size: 2.25em;
          font-weight: 600;
          letter-spacing: -0.17px;
          color: var(--color-black);
        }

        & .more {
          @include flexbox();
          @include align-items(center);
          @include justify-content(center);
          width: 2.7em;
          height: 2.7em;
          background-color: rgba($color: #bababa, $alpha: 0.15);
          border-radius: 50%;

          & i {
            font-size: 1.662em;
            color: #818181;
          }
        }
      }

      &-input-container {
        position: relative;
        width: 32.6em;
        height: 3.6em;

        & input {
          padding-left: emcalc(3.2, 1.4);
          padding-right: emcalc(1.5, 1.4);
          width: 100%;
          height: 100%;
          font-size: 1.4em;
          font-weight: 400;
          letter-spacing: -0.07px;
          border-radius: 6px;
          box-shadow: 0 3px 6px 0 rgba(206, 206, 206, 0.16);
          border: solid 1px #e4e8ec;

          &::placeholder {
            color: #77819b;
          }
        }

        & i {
          position: absolute;
          top: 50%;
          left: 1.4rem;
          font-size: 1.25em;
          color: #adadad;
          transform: translate(0, -50%);
        }
      }

      &.my-teams {
        & .content-card-header {
          margin-bottom: 2.4em;
        }

        & .content-card-main {
          @include flexbox();
          @include flex-wrap(wrap);
          @include align-items(center);
          @include justify-content(space-between);
        }

        & .color-card {
          margin-bottom: 1.5em;
          width: 49%;
          padding: 1.1em 1.8em 1.7em 1.5em;
          border-radius: 9px;

          &-subtitle {
            font-size: 1.29em;
            font-weight: 500;
            line-height: 1.17;
            color: #ffffff;
          }

          &-title {
            margin-bottom: emcalc(1.2, 2);
            font-size: 2em;
            font-weight: 600;
            letter-spacing: -0.1px;
            color: #ffffff;
          }

          &-buttons {
            @include flexbox();
            @include align-items(center);
            @include justify-content(space-between);

            & .more {
              @include flexbox();
              @include align-items(center);
              @include justify-content(center);
              width: 2.57em;
              height: 2.57em;
              background-color: rgba(255, 255, 255, 0.25);
              border-radius: 50%;

              & i {
                font-size: 1.58em;
                color: #fff;
              }
            }

            & .next {
              & i {
                font-size: 2.43em;
                color: #fff;
              }
            }
          }

          &.green {
            background: linear-gradient(to bottom, #2bcc46, #2bba43 118%);
          }

          &.orange {
            background: linear-gradient(to bottom, #ffbe36, #ffa700);
          }
        }
      }

      &.my-people {
        padding-left: 0;
        padding-right: 0;
        padding-bottom: 0;

        & .content-card-header {
          margin-bottom: 2em;
          padding-left: 3em;
          padding-right: 3em;
        }

        & .content-card-input-container {
          margin-left: 3em;
          margin-right: 3em;
        }

        & .content-card-main {
          //height: 34.2em;
          overflow: 0;
          position: relative;
          padding-left: 2.75em;
          padding-right: 2.75em;
          overflow: hidden;

          & .people-arrow {
            position: absolute;
            top: 3.2em;
            z-index: 200;

            & i {
              font-size: 2em;
              color: #dedede;
            }

            &.right {
              right: 1.5em;
            }

            &.left {
              left: 1.5em;
            }
          }

          & .people {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            opacity: 0;
            visibility: hidden;
            padding-top: 3.1em;
            @include flexbox();
            @include flex-wrap(wrap);
            @include align-items(flex-start);
            @include justify-content(center);
            overflow: hidden;
            transition: all 0.5s ease-in-out;

            &.active {
              position: sticky;
              opacity: 1;
              visibility: visible;
              left: 0;
              z-index: 100;
            }

            & .person {
              width: 12.5em;
              margin-bottom: 3.4em;
              @include inline-flex();
              @include flex-direction(column);
              @include align-items(center);
              @include justify-content(center);

              &-main {
                margin-bottom: 0.7em;
                position: relative;

                &-img {
                  width: 8em;
                  height: 8em;
                  object-fit: contain;
                  border-radius: 16px;
                }

                &-icon {
                  @include flexbox();
                  @include align-items(center);
                  @include justify-content(center);
                  position: absolute;
                  top: 0;
                  right: 0;
                  width: 2.8em;
                  height: 2.8em;
                  box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.16);
                  border: solid 1px #f5f5f5;
                  background-color: #ffffff;
                  border-radius: 50%;
                  transform: translate(45%, -45%);

                  & .icon-thumbs-up {
                    font-size: 1.56em;
                    color: #00be20;
                  }

                  & .icon-exclamation-circle {
                    font-size: 1.56em;
                    color: #f52600;
                  }

                  & .ok {
                    font-size: 1.2em;
                    font-weight: 700;
                    letter-spacing: -0.24px;
                    color: #ff8900;
                  }
                }
              }

              &-info {
                width: 12em;
                text-align: center;
                white-space: nowrap;
                overflow: hidden;
                text-overflow: ellipsis;

                &-name {
                  margin-bottom: emcalc(0.3, 1.25);
                  font-size: 1.25em;
                  font-weight: 500;
                  color: #172b4d;
                  white-space: nowrap;
                  overflow: hidden;
                  text-overflow: ellipsis;
                }

                &-position {
                  padding: 0 1em;
                  font-size: 1.15em;
                  font-weight: 400;
                  letter-spacing: -0.03px;
                  color: #7a869a;
                  white-space: nowrap;
                  overflow: hidden;
                  text-overflow: ellipsis;
                }
              }
            }
          }
        }
      }

      &.my-feedback {
        & .content-card-header {
          margin-bottom: 1.2em;
        }

        & .content-card-main {
          @include flexbox();
          @include flex-wrap(wrap);
          @include align-items(center);
          @include justify-content(space-between);

          & .progress {
            padding-top: 2em;
            padding-bottom: 2.2em;
            width: 49%;
            border-bottom: 1px solid #efefef;

            &:nth-last-of-type(1) {
              border-bottom: 0;
            }

            &:nth-last-of-type(2) {
              border-bottom: 0;
            }

            &-header {
              margin-bottom: 0.9em;
              @include flexbox();
              @include align-items(center);
              @include justify-content(space-between);

              &-title {
                font-size: 1.43em;
                font-weight: 600;
                line-height: 1.19;
                letter-spacing: -0.04px;
                color: #313c4b;
              }

              &-amount {
                font-size: 1.43em;
                font-weight: 600;
                line-height: 1.19;
                color: #24a238;
              }
            }

            &-bar {
              width: 100%;
              height: 1.5em;
              border-radius: 3.5px;
              background-color: #ecf0f6;

              &-fill {
                height: 100%;
                background-color: var(--color-green);
                border-top-left-radius: 3.5px;
                border-bottom-left-radius: 3.5px;
              }
            }
          }
        }
      }
    }
  }
}

// ==================================
//            ANIMATION
// ==================================
@keyframes slide-in-right {
  from {
    transform: translate(-100%, 0);
  }

  to {
    transform: translate(0, 0);
  }
}

@keyframes slide-in-left {
  from {
    transform: translate(100%, 0);
  }

  to {
    transform: translate(0, 0);
  }
}

@keyframes slide-out-right {
  from {
    transform: translate(0, 0);
  }

  to {
    transform: translate(100%, 0);
  }
}

@keyframes slide-out-left {
  from {
    transform: translate(0, 0);
  }

  to {
    transform: translate(-100%, 0);
  }
}

@keyframes fade-in-out {
  from {
    opacity: 1;
    visibility: visible;
  }

  50% {
    opacity: 0;
    visibility: hidden;
  }

  to {
    opacity: 1;
    visibility: visible;
  }
}

@keyframes fade-in-out-2 {
  from {
    opacity: 1;
    visibility: visible;
  }

  50% {
    opacity: 0;
    visibility: hidden;
  }

  to {
    opacity: 1;
    visibility: visible;
  }
}
